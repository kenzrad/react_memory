{"version":3,"sources":["components/ImageCard/index.js","components/Wrapper/index.js","components/Title/index.js","components/Instructions/index.js","components/Score/index.js","App.js","index.js"],"names":["ImageCard","props","react_default","a","createElement","className","onClick","handleImageClick","id","clickCheck","alt","name","src","image","Wrapper","children","Title","Instructions","Score","score","topScore","App","state","images","gameOver","_this","console","log","forEach","card","clicked","setState","newArray","shuffleArray","find","i","this","array","length","j","Math","floor","random","temp","_this2","components_Wrapper","components_Title","components_Instructions","components_Score","map","components_ImageCard","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"mlEAaeA,MAVf,SAAmBC,GACjB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKE,QAAS,kBAAML,EAAMM,iBAAiBN,EAAMO,GAAIP,EAAMQ,aAAaD,GAAIP,EAAMO,GAAIE,IAAKT,EAAMU,KAAMC,IAAKX,EAAMY,iBCA3GC,MAJf,SAAiBb,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMc,iBCG1BC,MAJf,SAAef,GACb,OAAOC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASJ,EAAMc,iBCGvBE,MAJf,SAAsBhB,GACpB,OAAOC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAgBJ,EAAMc,iBCK7BG,MANf,SAAejB,GACb,OACEC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,SAAb,UAA6BJ,EAAMkB,MAAnC,gBAAuDlB,EAAMmB,kBCyFlDC,6MArFbC,MAAQ,CACNC,SACAJ,MAAO,EACPC,SAAU,KAGZI,SAAW,WACgB,KAArBC,EAAKH,MAAMH,MACbO,QAAQC,IAAI,cAGZD,QAAQC,IAAI,aAEdF,EAAKH,MAAMC,OAAOK,QAAQ,SAAAC,GACxBA,EAAKC,QAAU,IAEjBL,EAAKM,SAAS,CAAEZ,MAAO,OAGzBZ,iBAAmB,SAACC,GAClB,IAAIwB,EAAWP,EAAKQ,aAAaV,GACjCE,EAAKH,MAAMC,OAAOW,KAAK,SAACrB,EAAOsB,GAC7B,GAAItB,EAAML,KAAOA,EAAI,CACnB,GAA0B,IAAtBe,EAAOY,GAAGL,SAAiBL,EAAKH,MAAMH,MAAQ,GAOhD,OANAI,EAAOY,GAAGL,QAAUP,EAAOY,GAAGL,QAAU,EACxCL,EAAKM,SAAS,CACZR,OAAQS,EACRb,MAAOM,EAAKH,MAAMH,MAAQ,EAC1BC,SAAUK,EAAKH,MAAMH,MAAQ,EAAIM,EAAKH,MAAMF,SAAWK,EAAKH,MAAMH,MAAQ,EAAIM,EAAKH,MAAMF,YAEpF,EAEsB,IAAtBG,EAAOY,GAAGL,SAAsC,KAArBL,EAAKH,MAAMH,MAC7CM,EAAKM,SAAS,CACZZ,MAAOM,EAAKH,MAAMH,MAAQ,EAC1BC,SAAUK,EAAKH,MAAMH,MAAQ,EAAIM,EAAKH,MAAMF,SAAWK,EAAKH,MAAMH,MAAQ,EAAIM,EAAKH,MAAMF,UACxF,WACDgB,KAAKZ,aAIPC,EAAKD,iBAObS,aAAe,SAAAI,GAEb,IADA,IAAIF,EAAIE,EAAMC,OAAS,EAChBH,EAAI,EAAGA,IAAK,CACjB,IAAMI,EAAIC,KAAKC,MAAMD,KAAKE,UAAYP,EAAI,IACpCQ,EAAON,EAAMF,GACnBE,EAAMF,GAAKE,EAAME,GACjBF,EAAME,GAAKI,EAEb,OAAON,2EAIA,IAAAO,EAAAR,KACP,OACElC,EAAAC,EAAAC,cAACyC,EAAD,KACE3C,EAAAC,EAAAC,cAAC0C,EAAD,0BACA5C,EAAAC,EAAAC,cAAC2C,EAAD,oMACA7C,EAAAC,EAAAC,cAAC4C,EAAD,CACE7B,MAAOiB,KAAKd,MAAMH,MAClBC,SAAUgB,KAAKd,MAAMF,WAGtBgB,KAAKd,MAAMC,OAAO0B,IAAI,SAAApC,GAAK,OAC1BX,EAAAC,EAAAC,cAAC8C,EAAD,CACE3C,iBAAkBqC,EAAKrC,iBACvBC,GAAIK,EAAML,GACVG,KAAME,EAAMF,KACZwC,IAAKtC,EAAML,GACXK,MAAOA,EAAMA,MACbJ,WAAYmC,EAAKnC,uBA9EX2C,mBCHlBC,IAASC,OAAOpD,EAAAC,EAAAC,cAACmD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.0119b023.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction ImageCard(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"img-container\">\n        <img onClick={() => props.handleImageClick(props.id, props.clickCheck)} id={props.id} alt={props.name} src={props.image}/>\n      </div>\n    </div>\n  );\n}\n\nexport default ImageCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Instructions(props) {\n  return <p className=\"instructions\">{props.children}</p>;\n}\n\nexport default Instructions;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Score(props) {\n  return (\n    <p className=\"score\">Score: {props.score}  Top Score: {props.topScore}</p>\n  )\n}\n\nexport default Score;\n","import React, { Component } from \"react\";\nimport ImageCard from \"./components/ImageCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Instructions from \"./components/Instructions\";\nimport Score from \"./components/Score\";\nimport images from \"./images.json\";\n\nclass App extends Component {\n  state = {\n    images,\n    score: 0,\n    topScore: 0\n  };\n\n  gameOver = () => {\n    if (this.state.score === 12) {\n      console.log(\"you win!!!\");\n    }\n    else {\n      console.log(\"you lose!\");\n    }\n    this.state.images.forEach(card => {\n      card.clicked = 0;\n    });\n    this.setState({ score: 0 });\n  };\n\n  handleImageClick = (id) => {\n    let newArray = this.shuffleArray(images);\n    this.state.images.find((image, i) => {\n      if (image.id === id) {\n        if (images[i].clicked === 0 && this.state.score < 11) {\n          images[i].clicked = images[i].clicked + 1;\n          this.setState({ \n            images: newArray,\n            score: this.state.score + 1, \n            topScore: this.state.score + 1 > this.state.topScore ? this.state.score + 1 : this.state.topScore\n          });\n          return true;\n        }\n        else if (images[i].clicked === 0 && this.state.score === 11) {\n          this.setState({ \n            score: this.state.score + 1, \n            topScore: this.state.score + 1 > this.state.topScore ? this.state.score + 1 : this.state.topScore\n          }, function () {\n            this.gameOver();\n          }) \n        } \n        else {\n          this.gameOver();\n        }\n      }\n    })\n  };\n\n\n  shuffleArray = array => {\n    let i = array.length - 1;\n    for (; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n    return array;\n  };\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Title>React Memory Game</Title>\n        <Instructions>Test your memory with the react memory game! Select an image only once per round. Every time you select a new image, the images will shuffle! Try to get the highest possible score of 12!!</Instructions>\n        <Score\n          score={this.state.score}\n          topScore={this.state.topScore}\n        >\n        </Score>\n        {this.state.images.map(image => (\n          <ImageCard\n            handleImageClick={this.handleImageClick}\n            id={image.id}\n            name={image.name}\n            key={image.id}\n            image={image.image}\n            clickCheck={this.clickCheck}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}